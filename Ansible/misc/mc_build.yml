---
- hosts: test
  remote_user: root
  tasks:

    #
    # Confgure timezone
    #
    - name: Set timezone to America/New_York
      become: true
      community.general.timezone:
        name: America/New_York

    #
    # Update apt repositories and reboot
    #
    - name: Update and upgrade apt packages
      become: true
      ansible.builtin.apt:
        update_cache: yes
        name: "*"
        state: latest


    #
    # ClamAV configuration
    #
    - name: Install ClamAV
      become: true
      ansible.builtin.apt:
        name: clamav
        state: latest
        update_cache: yes

    - name: Create log directory
      become: true
      ansible.builtin.file:
        path: /var/log/clamscan
        state: directory
        mode: '0755'

    #
    # Install docker
    #
    - name: Install docker dependencies
      apt:
        name: "{{item}}"
        state: present
        update_cache: yes
      loop:
        - apt-transport-https
        - ca-certificates
        - curl
        - gnupg-agent
        - software-properties-common

    - name: Add GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add docker repository to apt
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Install docker
      apt:
        name: "{{item}}"
        state: latest
        update_cache: yes
      loop:
        - docker-ce
        - docker-ce-cli
        - containerd.io

    - name: Check docker is active
      service:
        name: docker
        state: started
        enabled: yes

    - name: Ensure group "docker" exists
      ansible.builtin.group:
        name: docker
        state: present

    - name: Adding worker user to docker group
      user:
        name: worker
        groups: docker
        append: yes
        password: password

    - name: Install docker-compose
      get_url:
        url: https://github.com/docker/compose/releases/download/1.29.2/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: 'u+x,g+x'

    - name: Change file ownership, group and permissions
      ansible.builtin.file:
        path: /usr/local/bin/docker-compose
        owner: worker
        group: worker

    - name: Create directory for minecraft server
      ansible.builtin.file:
        path: /home/worker/mc_docker
        state: directory

    - name: Create docker compose file
      ansible.builtin.copy:
        dest: /home/worker/mc_docker/docker-compose.yml
        content: |
          version: "3.8"

          services:
            mc:
              image: itzg/minecraft-server
              restart: always
              tty: true
              stdin_open: true
              ports:
                - "25565:25565"
              environment:
                EULA: "TRUE"
                MEMORY: "2G"
              volumes:
                # attach the relative directory 'data' to the container's /data path
                - /opt/minecraft:/data


    #
    # Start docker compose
    #
    - name: Create cron job for starting docker compose
      cron:
        name: Ensure docker compose is started at reboot
        special_time: reboot
        user: worker
        job: docker-compose -f /home/worker/mc_docker/docker-compose.yml up -d

    - name: Reboot hosts
      become: true
      ansible.builtin.reboot:
        reboot_timeout: 5
        post_reboot_delay: 30